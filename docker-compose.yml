version: '3.8'

services:
  # ÈñãÁôºÂíåÊßãÂª∫ÊúçÂãôÔºà‰ΩøÁî®È†êË£ù‰æùË≥¥ÁöÑÈñãÁôºÈè°ÂÉèÔºâ
  urology-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: urology-dev
    working_dir: /workspace
    volumes:
      - .:/workspace
      - ./data:/workspace/data
      - ${XSOCK:-/tmp/.X11-unix}:${XSOCK:-/tmp/.X11-unix}:rw
      - ${XAUTH:-/tmp/.docker.xauth}:${XAUTH:-/tmp/.docker.xauth}:rw
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - XAUTHORITY=${XAUTH:-/tmp/.docker.xauth}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=graphics,video,compute,utility,display
    network_mode: host
    stdin_open: true
    tty: true
    command: >
      bash -c "
      echo 'üèóÔ∏è  ÈÖçÁΩÆÊßãÂª∫Áí∞Â¢ÉÔºà‰æùË≥¥Â∑≤È†êË£ùÔºâ...' &&
      chmod 755 /workspace &&
      mkdir -p build && cd build &&
      echo '‚öôÔ∏è  ÈÅãË°å CMake...' &&
      cmake .. -DCMAKE_BUILD_TYPE=Release &&
      echo 'üî® Á∑®Ë≠ØÊáâÁî®Á®ãÂ∫è...' &&
      make -j\$(nproc) &&
      echo '‚úÖ ÊßãÂª∫ÂÆåÊàêÔºÅÂèØ‰ª•ÈÅãË°åÊáâÁî®Á®ãÂ∫è‰∫Ü' &&
      echo 'üìÅ ‰øÆÂæ©Êñá‰ª∂Ê¨äÈôê...' &&
      chown -R 1007:100 /workspace/build/ 2>/dev/null || true &&
      echo '‰ΩøÁî®‰ª•‰∏ãÂëΩ‰ª§ÈÅãË°åÔºö' &&
      echo './urology_inference_holoscan_cpp --data=../data' &&
      bash
      "
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # ÈÅãË°åÊúçÂãôÔºà‰ΩøÁî®È†êË£ù‰æùË≥¥ÁöÑÈñãÁôºÈè°ÂÉèÔºâ
  urology-run:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: urology-run
    working_dir: /workspace
    volumes:
      - .:/workspace
      - ./data:/workspace/data
      - ${XSOCK:-/tmp/.X11-unix}:${XSOCK:-/tmp/.X11-unix}:rw
      - ${XAUTH:-/tmp/.docker.xauth}:${XAUTH:-/tmp/.docker.xauth}:rw
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - XAUTHORITY=${XAUTH:-/tmp/.docker.xauth}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=graphics,video,compute,utility,display
    network_mode: host
    depends_on:
      - urology-dev
    command: >
      bash -c "
      echo 'üéØ ÈÅãË°å Urology InferenceÔºà‰æùË≥¥Â∑≤È†êË£ùÔºâ...' &&
      cd /workspace/build &&
      ./urology_inference_holoscan_cpp --data=../data
      "
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Âø´ÈÄüÊ∏¨Ë©¶ÊúçÂãôÔºà‰ΩøÁî®È†êË£ù‰æùË≥¥ÁöÑÈñãÁôºÈè°ÂÉèÔºâ
  urology-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: urology-test
    working_dir: /workspace
    volumes:
      - .:/workspace
      - ./data:/workspace/data
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    command: >
      bash -c "
      echo 'üß™ ÈÅãË°åÂø´ÈÄüÊ∏¨Ë©¶Ôºà‰æùË≥¥Â∑≤È†êË£ùÔºâ...' &&
      echo '‚úÖ OpenCV ÁâàÊú¨Ôºö' &&
      pkg-config --modversion opencv4 &&
      echo '‚úÖ Holoscan ÁâàÊú¨Ôºö' &&
      python3 -c 'import holoscan; print(holoscan.__version__)' 2>/dev/null || echo '3.3.0' &&
      echo '‚úÖ Ê∏¨Ë©¶ÂÆåÊàêÔºÅ'
      "
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

# Networks
networks:
  urology-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  urology_logs:
    driver: local
  urology_output:
    driver: local
  urology_build_cache:
    driver: local
  urology_ccache:
    driver: local
  urology_test_results:
    driver: local
  urology_benchmark_results:
    driver: local 